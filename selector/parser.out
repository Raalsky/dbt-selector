Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression INTERSECTION expression
Rule 2     expression -> expression CONCATENATION expression
Rule 3     expression -> LPAREN expression RPAREN
Rule 4     expression -> term
Rule 5     term -> RELATED term
Rule 6     term -> term RELATED
Rule 7     term -> AT term
Rule 8     term -> resource
Rule 9     resource -> RESOURCE

Terminals, with rules where they appear

AT                   : 7
CONCATENATION        : 2
INTERSECTION         : 1
LPAREN               : 3
RELATED              : 5 6
RESOURCE             : 9
RPAREN               : 3
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 0
resource             : 8
term                 : 4 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression INTERSECTION expression
    (2) expression -> . expression CONCATENATION expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    LPAREN          shift and go to state 2
    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    expression                     shift and go to state 1
    term                           shift and go to state 3
    resource                       shift and go to state 6

state 1

    (0) S' -> expression .
    (1) expression -> expression . INTERSECTION expression
    (2) expression -> expression . CONCATENATION expression

    INTERSECTION    shift and go to state 8
    CONCATENATION   shift and go to state 9


state 2

    (3) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression INTERSECTION expression
    (2) expression -> . expression CONCATENATION expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    LPAREN          shift and go to state 2
    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    expression                     shift and go to state 10
    term                           shift and go to state 3
    resource                       shift and go to state 6

state 3

    (4) expression -> term .
    (6) term -> term . RELATED

    INTERSECTION    reduce using rule 4 (expression -> term .)
    CONCATENATION   reduce using rule 4 (expression -> term .)
    $end            reduce using rule 4 (expression -> term .)
    RPAREN          reduce using rule 4 (expression -> term .)
    RELATED         shift and go to state 11


state 4

    (5) term -> RELATED . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    term                           shift and go to state 12
    resource                       shift and go to state 6

state 5

    (7) term -> AT . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    term                           shift and go to state 13
    resource                       shift and go to state 6

state 6

    (8) term -> resource .

    RELATED         reduce using rule 8 (term -> resource .)
    INTERSECTION    reduce using rule 8 (term -> resource .)
    CONCATENATION   reduce using rule 8 (term -> resource .)
    $end            reduce using rule 8 (term -> resource .)
    RPAREN          reduce using rule 8 (term -> resource .)


state 7

    (9) resource -> RESOURCE .

    RELATED         reduce using rule 9 (resource -> RESOURCE .)
    INTERSECTION    reduce using rule 9 (resource -> RESOURCE .)
    CONCATENATION   reduce using rule 9 (resource -> RESOURCE .)
    $end            reduce using rule 9 (resource -> RESOURCE .)
    RPAREN          reduce using rule 9 (resource -> RESOURCE .)


state 8

    (1) expression -> expression INTERSECTION . expression
    (1) expression -> . expression INTERSECTION expression
    (2) expression -> . expression CONCATENATION expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    LPAREN          shift and go to state 2
    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    expression                     shift and go to state 14
    term                           shift and go to state 3
    resource                       shift and go to state 6

state 9

    (2) expression -> expression CONCATENATION . expression
    (1) expression -> . expression INTERSECTION expression
    (2) expression -> . expression CONCATENATION expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . term
    (5) term -> . RELATED term
    (6) term -> . term RELATED
    (7) term -> . AT term
    (8) term -> . resource
    (9) resource -> . RESOURCE

    LPAREN          shift and go to state 2
    RELATED         shift and go to state 4
    AT              shift and go to state 5
    RESOURCE        shift and go to state 7

    expression                     shift and go to state 15
    term                           shift and go to state 3
    resource                       shift and go to state 6

state 10

    (3) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . INTERSECTION expression
    (2) expression -> expression . CONCATENATION expression

    RPAREN          shift and go to state 16
    INTERSECTION    shift and go to state 8
    CONCATENATION   shift and go to state 9


state 11

    (6) term -> term RELATED .

    RELATED         reduce using rule 6 (term -> term RELATED .)
    INTERSECTION    reduce using rule 6 (term -> term RELATED .)
    CONCATENATION   reduce using rule 6 (term -> term RELATED .)
    $end            reduce using rule 6 (term -> term RELATED .)
    RPAREN          reduce using rule 6 (term -> term RELATED .)


state 12

    (5) term -> RELATED term .
    (6) term -> term . RELATED

    RELATED         reduce using rule 5 (term -> RELATED term .)
    INTERSECTION    reduce using rule 5 (term -> RELATED term .)
    CONCATENATION   reduce using rule 5 (term -> RELATED term .)
    $end            reduce using rule 5 (term -> RELATED term .)
    RPAREN          reduce using rule 5 (term -> RELATED term .)

  ! RELATED         [ shift and go to state 11 ]


state 13

    (7) term -> AT term .
    (6) term -> term . RELATED

    RELATED         reduce using rule 7 (term -> AT term .)
    INTERSECTION    reduce using rule 7 (term -> AT term .)
    CONCATENATION   reduce using rule 7 (term -> AT term .)
    $end            reduce using rule 7 (term -> AT term .)
    RPAREN          reduce using rule 7 (term -> AT term .)

  ! RELATED         [ shift and go to state 11 ]


state 14

    (1) expression -> expression INTERSECTION expression .
    (1) expression -> expression . INTERSECTION expression
    (2) expression -> expression . CONCATENATION expression

    INTERSECTION    reduce using rule 1 (expression -> expression INTERSECTION expression .)
    CONCATENATION   reduce using rule 1 (expression -> expression INTERSECTION expression .)
    $end            reduce using rule 1 (expression -> expression INTERSECTION expression .)
    RPAREN          reduce using rule 1 (expression -> expression INTERSECTION expression .)

  ! INTERSECTION    [ shift and go to state 8 ]
  ! CONCATENATION   [ shift and go to state 9 ]


state 15

    (2) expression -> expression CONCATENATION expression .
    (1) expression -> expression . INTERSECTION expression
    (2) expression -> expression . CONCATENATION expression

    INTERSECTION    reduce using rule 2 (expression -> expression CONCATENATION expression .)
    CONCATENATION   reduce using rule 2 (expression -> expression CONCATENATION expression .)
    $end            reduce using rule 2 (expression -> expression CONCATENATION expression .)
    RPAREN          reduce using rule 2 (expression -> expression CONCATENATION expression .)

  ! INTERSECTION    [ shift and go to state 8 ]
  ! CONCATENATION   [ shift and go to state 9 ]


state 16

    (3) expression -> LPAREN expression RPAREN .

    INTERSECTION    reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    CONCATENATION   reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 3 (expression -> LPAREN expression RPAREN .)

